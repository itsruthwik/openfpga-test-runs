read_verilog -sv /mnt/vault1/rsunketa/OpenFPGA/openfpga-test-runs/FPL_2025/router_files/axis_router/src/*v

read_verilog -sv /mnt/vault1/rsunketa/OpenFPGA/openfpga-test-runs/FPL_2025/router_files/axis_router/router_wrap.sv


read_verilog -lib -specify /mnt/vault1/rsunketa/OpenFPGA/openfpga_flow/openfpga_yosys_techlib/k6_frac_N10_tileable_adder_chain_dpram8K_dsp36_fracff_40nm_cell_sim.v

hierarchy -top router_wrap

proc
techmap -D NO_LUT -map /mnt/vault1/rsunketa/OpenFPGA/openfpga_flow/openfpga_yosys_techlib/k6_frac_N10_tileable_adder_chain_dpram8K_dsp36_fracff_40nm_dff_map.v

# techmap -D NO_LUT -map +/adff2dff.v

# Synthesis
flatten
opt_expr
opt_clean
check
opt -nodffe -nosdff
fsm
opt -nodffe -nosdff
wreduce
peepopt
opt_clean
########################
# Map multipliers
# Inspired from synth_xilinx.cc
#########################
# Avoid merging any registers into DSP, reserve memory port registers first
memory_dff
wreduce t:$mul
techmap -map +/mul2dsp.v -map /mnt/vault1/rsunketa/OpenFPGA/openfpga_flow/openfpga_yosys_techlib/k6_frac_N10_tileable_adder_chain_dpram8K_dsp36_40nm_dsp_map.v -D DSP_A_MAXWIDTH=36 -D DSP_B_MAXWIDTH=36 -D DSP_A_MINWIDTH=2 -D DSP_B_MINWIDTH=2 -D DSP_NAME=mult_36x36
select a:mul2dsp
setattr -unset mul2dsp
opt_expr -fine
wreduce
select -clear
chtype -set $mul t:$__soft_mul# Extract arithmetic functions

opt -nodffe -nosdff
memory -nomap
opt_clean
opt -fast -full -nodffe -nosdff
memory_map
opt -full -nodffe -nosdff
techmap
opt -fast -nodffe -nosdff
clean

# LUT mapping
abc -lut 6
techmap -D NO_LUT -map /mnt/vault1/rsunketa/OpenFPGA/openfpga_flow/openfpga_yosys_techlib/k6_frac_N10_tileable_adder_chain_dpram8K_dsp36_fracff_40nm_dff_map.v

opt -fast -nodffe -nosdff
opt_clean

# Check
synth -run check

# Clean and output blif
opt_clean -purge
#write_blif mvm_no_noc_yosys_out.blif
write_blif /mnt/vault1/rsunketa/OpenFPGA/openfpga-test-runs/FPL_2025/router_files/axis_router/synthesized_router_wrap.blif




